{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sai Nikhil\\\\Desktop\\\\github-search-user\\\\src\\\\components\\\\pages\\\\Home\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./Home.css\";\nimport axios from \"../../../axios\";\nimport User from \"../../ui/User\";\nimport Repo from \"../../ui/Repo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const [query, setQuery] = useState(\"\"); //Users fetched from the API\n\n  const [users, setUsers] = useState([]); //Page\n\n  const [page, setPage] = useState(1); //Per page\n\n  const [limit, setLimit] = useState(10);\n  const [currentpage, setCurrentPage] = useState(0);\n  const [activepage, setActivetPage] = useState(0);\n  const [perPage] = useState(10);\n  const [offset, setOffset] = useState(0);\n  const pageNumbers = [];\n\n  for (let i = 0; i < Math.ceil(users.length) / perPage; i++) {\n    pageNumbers.push(i);\n  }\n\n  const handleChange = (e, pageno) => {\n    //console.log(\"test\")\n    console.log(\"pageno\" + pageno);\n    setCurrentPage(Math.ceil(users.length / perPage));\n    const selectedPage = pageno;\n    setActivetPage(pageno);\n    setOffset(selectedPage * perPage);\n  };\n\n  const slice = users.slice(offset, offset + perPage);\n\n  const handleQueryInput = e => {\n    const value = e.target.value;\n    setQuery(value);\n  };\n\n  const handlePrevPage = () => {\n    setPage(page => {\n      if (page === 1) return page;else return page - 1;\n    });\n  };\n\n  const handleNextPage = () => {\n    setPage(page => page + 1);\n  };\n\n  const handlePageLimit = e => {\n    const value = e.target.value;\n    setLimit(parseInt(value));\n  };\n\n  const fetchUsers = async () => {\n    try {\n      const {\n        data\n      } = await axios.get(\"/search/users?q=\" + query, {\n        params: {\n          page,\n          per_page: limit\n        }\n      });\n      return data === null || data === void 0 ? void 0 : data.items;\n    } catch (error) {\n      console.error(error);\n      return null;\n    }\n  };\n\n  const handleSearchUsers = async e => {\n    e.preventDefault();\n\n    if (query) {\n      const items = await fetchUsers();\n      setUsers(items);\n    } else {\n      console.log(\"Your query is empty...\");\n    }\n  };\n\n  useEffect(() => {\n    const displayUsersOnChange = async () => {\n      if (query) {\n        const items = await fetchUsers();\n        setUsers(items);\n      }\n    };\n\n    displayUsersOnChange();\n  }, [page, limit]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"GitHub Search User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: query,\n          onChange: handleQueryInput,\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSearchUsers,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-results\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"more-options\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"small\", {\n            children: \"Per Page\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: handlePageLimit,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"10\",\n              children: \"10\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"20\",\n              children: \"20\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"50\",\n              children: \"50\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"100\",\n              children: \"100\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pagination\",\n          children: pageNumbers.map(page => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: event => handleChange(event, page),\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: page == activepage ? 'page-link active' : 'page-link',\n              children: page + 1\n            }, page, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 75\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), slice ? slice.map(user => {\n        return /*#__PURE__*/_jsxDEV(User, {\n          user: user\n        }, user.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 20\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"There is nothing to display...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"HtyR7JgMKusN7RwuqI3qzq4NGV8=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/Sai Nikhil/Desktop/github-search-user/src/components/pages/Home/Home.js"],"names":["React","useState","useEffect","axios","User","Repo","Home","query","setQuery","users","setUsers","page","setPage","limit","setLimit","currentpage","setCurrentPage","activepage","setActivetPage","perPage","offset","setOffset","pageNumbers","i","Math","ceil","length","push","handleChange","e","pageno","console","log","selectedPage","slice","handleQueryInput","value","target","handlePrevPage","handleNextPage","handlePageLimit","parseInt","fetchUsers","data","get","params","per_page","items","error","handleSearchUsers","preventDefault","displayUsersOnChange","map","event","user","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,YAAP;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,IAAP,MAAiB,eAAjB;;;AACA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC,CADiB,CAEjB;;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC,CAHiB,CAIjB;;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,CAAD,CAAhC,CALiB,CAMjB;;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAM,CAACc,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACgB,UAAD,EAAaC,cAAb,IAA+BjB,QAAQ,CAAC,CAAD,CAA7C;AACA,QAAM,CAACkB,OAAD,IAAYlB,QAAQ,CAAC,EAAD,CAA1B;AACA,QAAM,CAACmB,MAAD,EAASC,SAAT,IAAsBpB,QAAQ,CAAC,CAAD,CAApC;AACA,QAAMqB,WAAW,GAAG,EAApB;;AAGA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAACC,IAAI,CAACC,IAAL,CAAUhB,KAAK,CAACiB,MAAhB,IAAwBP,OAA1C,EAAmDI,CAAC,EAApD,EAAuD;AACrDD,IAAAA,WAAW,CAACK,IAAZ,CAAiBJ,CAAjB;AACH;;AAED,QAAMK,YAAY,GAAG,CAACC,CAAD,EAAIC,MAAJ,KAAe;AAChC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAASF,MAArB;AACAd,IAAAA,cAAc,CAACQ,IAAI,CAACC,IAAL,CAAUhB,KAAK,CAACiB,MAAN,GAAaP,OAAvB,CAAD,CAAd;AACA,UAAMc,YAAY,GAAGH,MAArB;AACAZ,IAAAA,cAAc,CAACY,MAAD,CAAd;AACAT,IAAAA,SAAS,CAACY,YAAY,GAACd,OAAd,CAAT;AAGH,GATD;;AAWA,QAAMe,KAAK,GAAGzB,KAAK,CAACyB,KAAN,CAAYd,MAAZ,EAAoBA,MAAM,GAAGD,OAA7B,CAAd;;AAEE,QAAMgB,gBAAgB,GAAIN,CAAD,IAAO;AAC9B,UAAMO,KAAK,GAAGP,CAAC,CAACQ,MAAF,CAASD,KAAvB;AACA5B,IAAAA,QAAQ,CAAC4B,KAAD,CAAR;AACD,GAHD;;AAIA,QAAME,cAAc,GAAG,MAAM;AAC3B1B,IAAAA,OAAO,CAAED,IAAD,IAAU;AAChB,UAAIA,IAAI,KAAK,CAAb,EAAgB,OAAOA,IAAP,CAAhB,KACK,OAAOA,IAAI,GAAG,CAAd;AACN,KAHM,CAAP;AAID,GALD;;AAOA,QAAM4B,cAAc,GAAG,MAAM;AAC3B3B,IAAAA,OAAO,CAAED,IAAD,IAAUA,IAAI,GAAG,CAAlB,CAAP;AACD,GAFD;;AAIA,QAAM6B,eAAe,GAAIX,CAAD,IAAO;AAC7B,UAAMO,KAAK,GAAGP,CAAC,CAACQ,MAAF,CAASD,KAAvB;AACAtB,IAAAA,QAAQ,CAAC2B,QAAQ,CAACL,KAAD,CAAT,CAAR;AACD,GAHD;;AAKA,QAAMM,UAAU,GAAG,YAAY;AAC7B,QAAI;AACF,YAAM;AAAEC,QAAAA;AAAF,UAAW,MAAMxC,KAAK,CAACyC,GAAN,CAAU,qBAAqBrC,KAA/B,EAAsC;AAC3DsC,QAAAA,MAAM,EAAE;AACNlC,UAAAA,IADM;AAENmC,UAAAA,QAAQ,EAAEjC;AAFJ;AADmD,OAAtC,CAAvB;AAMA,aAAO8B,IAAP,aAAOA,IAAP,uBAAOA,IAAI,CAAEI,KAAb;AACD,KARD,CAQE,OAAOC,KAAP,EAAc;AACdjB,MAAAA,OAAO,CAACiB,KAAR,CAAcA,KAAd;AACA,aAAO,IAAP;AACD;AACF,GAbD;;AAeA,QAAMC,iBAAiB,GAAG,MAAOpB,CAAP,IAAa;AACrCA,IAAAA,CAAC,CAACqB,cAAF;;AACA,QAAI3C,KAAJ,EAAW;AACT,YAAMwC,KAAK,GAAG,MAAML,UAAU,EAA9B;AACAhC,MAAAA,QAAQ,CAACqC,KAAD,CAAR;AACD,KAHD,MAGO;AACLhB,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACD;AACF,GARD;;AAUA9B,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMiD,oBAAoB,GAAG,YAAY;AACvC,UAAI5C,KAAJ,EAAW;AACT,cAAMwC,KAAK,GAAG,MAAML,UAAU,EAA9B;AACAhC,QAAAA,QAAQ,CAACqC,KAAD,CAAR;AACD;AACF,KALD;;AAMAI,IAAAA,oBAAoB;AACrB,GARQ,EAQN,CAACxC,IAAD,EAAOE,KAAP,CARM,CAAT;AAUA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,gCACE;AAAO,UAAA,KAAK,EAAEN,KAAd;AAAqB,UAAA,QAAQ,EAAE4B,gBAA/B;AAAiD,UAAA,IAAI,EAAC;AAAtD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,OAAO,EAAEc,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAQE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAQ,YAAA,QAAQ,EAAET,eAAlB;AAAA,oCACE;AAAQ,cAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAQ,cAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAQ,cAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,eAIE;AAAQ,cAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAUE;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,oBAGGlB,WAAW,CAAC8B,GAAZ,CAAgBzC,IAAI,iBACb;AAAQ,YAAA,OAAO,EAAG0C,KAAD,IAAWzB,YAAY,CAACyB,KAAD,EAAO1C,IAAP,CAAxC;AAAA,mCAAsD;AAAiB,cAAA,SAAS,EAAGA,IAAD,IAASM,UAAT,GAAuB,kBAAvB,GAA4C,WAAxE;AAAA,wBACnDN,IAAI,GAAC;AAD8C,eAAWA,IAAX;AAAA;AAAA;AAAA;AAAA;AAAtD;AAAA;AAAA;AAAA;AAAA,kBADP;AAHH;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAqBGuB,KAAK,GACJA,KAAK,CAACkB,GAAN,CAAWE,IAAD,IAAU;AAClB,4BAAO,QAAC,IAAD;AAAM,UAAA,IAAI,EAAEA;AAAZ,WAAuBA,IAAI,CAACC,EAA5B;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFD,CADI,gBAKJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA1BJ;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwCD,CAhID;;GAAMjD,I;;KAAAA,I;AAkIN,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./Home.css\";\r\nimport axios from \"../../../axios\";\r\nimport User from \"../../ui/User\";\r\nimport Repo from \"../../ui/Repo\"\r\nconst Home = () => {\r\n  const [query, setQuery] = useState(\"\");\r\n  //Users fetched from the API\r\n  const [users, setUsers] = useState([]);\r\n  //Page\r\n  const [page, setPage] = useState(1);\r\n  //Per page\r\n  const [limit, setLimit] = useState(10);\r\n\r\n  const [currentpage, setCurrentPage] = useState(0)\r\n  const [activepage, setActivetPage] = useState(0)\r\n  const [perPage] = useState(10);\r\n  const [offset, setOffset] = useState(0);\r\n  const pageNumbers = [];\r\n\r\n\r\n  for (let i = 0; i<Math.ceil(users.length)/perPage; i++){\r\n    pageNumbers.push(i)\r\n}\r\n\r\nconst handleChange = (e, pageno) => {\r\n    //console.log(\"test\")\r\n    console.log(\"pageno\"+pageno)\r\n    setCurrentPage(Math.ceil(users.length/perPage));\r\n    const selectedPage = pageno;\r\n    setActivetPage(pageno);\r\n    setOffset(selectedPage*perPage);\r\n\r\n\r\n}\r\n\r\nconst slice = users.slice(offset, offset + perPage)\r\n\r\n  const handleQueryInput = (e) => {\r\n    const value = e.target.value;\r\n    setQuery(value);\r\n  };\r\n  const handlePrevPage = () => {\r\n    setPage((page) => {\r\n      if (page === 1) return page;\r\n      else return page - 1;\r\n    });\r\n  };\r\n\r\n  const handleNextPage = () => {\r\n    setPage((page) => page + 1);\r\n  };\r\n\r\n  const handlePageLimit = (e) => {\r\n    const value = e.target.value;\r\n    setLimit(parseInt(value));\r\n  };\r\n\r\n  const fetchUsers = async () => {\r\n    try {\r\n      const { data } = await axios.get(\"/search/users?q=\" + query, {\r\n        params: {\r\n          page,\r\n          per_page: limit,\r\n        },\r\n      });\r\n      return data?.items;\r\n    } catch (error) {\r\n      console.error(error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const handleSearchUsers = async (e) => {\r\n    e.preventDefault();\r\n    if (query) {\r\n      const items = await fetchUsers();\r\n      setUsers(items);\r\n    } else {\r\n      console.log(\"Your query is empty...\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const displayUsersOnChange = async () => {\r\n      if (query) {\r\n        const items = await fetchUsers();\r\n        setUsers(items);\r\n      }\r\n    };\r\n    displayUsersOnChange();\r\n  }, [page, limit]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"search-form\">\r\n        <h2>GitHub Search User</h2>\r\n        <form>\r\n          <input value={query} onChange={handleQueryInput} type=\"text\" />\r\n          <button onClick={handleSearchUsers}>Search</button>\r\n        </form>\r\n      </div>\r\n      <div className=\"search-results\">\r\n        <div className=\"more-options\">\r\n          <label>\r\n            <small>Per Page</small>\r\n            <select onChange={handlePageLimit}>\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"50\">50</option>\r\n              <option value=\"100\">100</option>\r\n            </select>\r\n          </label>\r\n          <div className=\"pagination\">\r\n            {/* <button onClick={handlePrevPage}>{page}</button>\r\n            <button onClick={handleNextPage}>{page + 1}</button> */}\r\n            {pageNumbers.map(page => (  \r\n                    <button onClick={(event) => handleChange(event,page)}><span key={page} className={(page)==(activepage) ? 'page-link active' : 'page-link' }>  \r\n                      {page+1}</span>\r\n                      </button>\r\n              ))} \r\n          </div>\r\n        </div>\r\n        {slice ? (\r\n          slice.map((user) => {\r\n            return <User user={user} key={user.id} />;\r\n          })\r\n        ) : (\r\n          <h2>There is nothing to display...</h2>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}